name: "Ubuntu Packaging Workflow"
on:
  workflow_dispatch:
    inputs:
      silkit_source_repo:
        description: 'URL to the sil-kit repository in the form namespace/repo.git'
        required: true
        type: string
      silkit_source_ref:
        description: 'Commit ref of the repo with the SIL Kit packaging sources. Choose carefully'
        required: false
        type: string
        default: 'main'
      silkit_pkg_ref:
        description: 'sil-kit-pkg ref used/created for a release'
        required: false
        type: string
      debian_fullname:
        description: 'Name of the maintainer creating the current package'
        required: true
        type: string
      debian_email:
        description: 'Email of the maintainer creating the current package'
        required: true
        type: string
      debian_arch:
        description: 'Ubuntu CPU arch the package should be build for'
        required: true
        default: 'amd64'
        type: string

env:
  ARTIFACT_NAME: silkit-ubuntu-20.04-deb
  BUILD_SETTINGS: |
      {

          "SilKitInfo": {
              "url": "${{ github.workspace }}/sil-kit.git",
              "ref": "",
              "recursive": true,
              "is_local": true
          },
          "package_repo_path": "${{ github.workspace }}/sil-kit-pkg",
          "version": {
              "major": 4,
              "minor": 0,
              "patch": 52,
              "suffix": "rc-5"
          },
          "work_dir": "${{ github.workspace }}/_i",
          "keep_temp": true,
          "output_dir": "${{ github.workspace }}/_o",
          "platform": "Ubuntu-20.04"
      }

jobs:
  package_debian:
    runs-on: ubuntu-latest
    name: Job to build debian packages
    container:
      image: ghcr.io/mariusbgm/sil-kit-ci-ubuntu-20.04:main
    steps:

      - name: Checkout (sil-kit-pkg)
        uses: actions/checkout@v4

      - name: Checkout (sil-kit)
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.silkit_source_repo }}
          submodules: recursive
          path: sil-kit
          ref: ${{ inputs.silkit_source_ref }}
          github-server-url: https://github.com

      - name: Install build dependencies
        run: sudo apt install -y debhelper dpkg-dev devscripts dh-make zip

      - name: Install cmake
        run: |
          echo $PWD
          echo ${{ github.workspace }}
          sh .github/actions/fetch_cmake.sh

      - name: Build
        id: build
        env:
          DEBFULLNAME: ${{ inputs.debian_fullname }}
          DEBEMAIL: ${{ inputs.debian_fullname }}
          CI_RUN: "1"
        run: |
          mkdir ${{ github.workspace }}/_i/
          mkdir ${{ github.workspace }}/_o/
          echo $BUILD_SETTINGS >> _i/build_settings.json
          python3 sil-kit-pkg/scripts/build_deb.py _i/build_settings.json

      - name: Test Package
        id: test
        env:
          DEB_DIR: ${{ github.workspace }}
          PKG_DIR: ${{ github.workspace }}/sil-kit-pkg/
        run: |
          python3 sil-kit-pkg/tests/test_deb.py \
          --deb-directory "$DEB_DIR" \
          --package-directory "$PKG_DIR"

      - name: Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            ./*.dsc
            ./*.build*
            ./*.changes
            ./*.*deb
          retention-days: 1

      - name: Prepare artifact
        if: inputs.silkit_pkg_ref != ''
        run: |
          zip -j ${{ env.ARTIFACT_NAME }}.zip ./*.dsc ./*.build* ./*.changes ./*.*deb
          sha256sum ./${{ env.ARTIFACT_NAME }}.zip > ./SHA256

      - name: Create git tag
        if: inputs.silkit_pkg_ref != ''
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/tags/${{ inputs.silkit_pkg_ref }}',
                sha: context.sha,
              })
            } catch(error) {
              core.warning("Could not create the specified ref, continuing without it!")
            }

      - name: Release artifact
        if: inputs.silkit_pkg_ref != ''
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ contains(inputs.silkit_pkg_ref, '-rc') }}
          draft: false
          tag_name: ${{ inputs.silkit_pkg_ref }}
          name: ${{ inputs.silkit_pkg_ref }}
          files: |
            ./${{ env.ARTIFACT_NAME }}.zip
            ./SHA256


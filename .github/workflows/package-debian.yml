name: "Ubuntu Packaging Workflow"
on:
  workflow_dispatch:
    inputs:
      silkit_source_url:
        description: 'URL to the libsilkit source code tarball'
        required: true
        type: string
      silkit_pkg_url:
        description: 'URL to the repo with the SIL Kit packaging sources'
        required: true
        default: '.'
        type: string
      silkit_ref:
        description: 'Commit ref of the repo with the SIL Kit packaging sources. Choose carefully'
        required: false
        type: string
        default: ''
      debian_fullname:
        description: 'Name of the maintainer creating the current package'
        required: true
        type: string
      debian_email:
        description: 'Email of the maintainer creating the current package'
        required: true
        type: string
      debian_arch:
        description: 'Revision of the package to be build'
        required: true
        default: 'amd64'
        type: string
      do_release:
        description: 'Create an official release'
        required: false
        default: false
        type: boolean

jobs:
  package_debian:
    runs-on: ubuntu-latest
    name: Job to build debian packages
    container:
      image: ghcr.io/mariusbgm/sil-kit-ci-ubuntu-20.04:main
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Create git tag
        if: ${{ inputs.do_release }} && ${{ steps.check_tag.outputs.create_tag }} == "true"
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/tags/v${{ inputs.silkit_ref }}',
                sha: context.sha,
              })
            } catch(error) {
              console.warn("Could not Create Ref, continuing without it!")
            }

      - name: Install build dependencies
        run: sudo apt install -y debhelper dpkg-dev devscripts dh-make zip
      - name: Install cmake
        run: |
          sh ./.github/actions/fetch_cmake.sh
      - name: Build
        id: build
        env:
          SILKIT_SOURCE_URL: ${{ inputs.silkit_source_url }}
          SILKIT_REVISION: ${{ inputs.silkit_ref }}
          SILKIT_PKG_URL: ${{ inputs.silkit_pkg_url }}
          DEBFULLNAME: ${{ inputs.debian_fullname }}
          DEBEMAIL: ${{ inputs.debian_fullname }}
          CI_RUN: "1"
        run: |
          sh ./.github/actions/build_deb.sh 20.04
      - name: Artifact
        env:
          ARTIFACT_NAME: libsilkit4_${{ steps.build.outputs.silkit_version }}-${{ steps.build.outputs.silkit_debian_revision }}_${{ inputs.debian_arch }}
        uses: actions/upload-artifact@v4
        with:
          
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            ./*.dsc
            ./*.build*
            ./*.changes
            ./*.*deb
          retention-days: 1
      - name: Prepare artifact
        if: ${{ inputs.do_release }}
        env:
          ARTIFACT_NAME: libsilkit4_${{ steps.build.outputs.silkit_version }}-${{ steps.build.outputs.silkit_debian_revision }}_${{ inputs.debian_arch }}
        run: |
          zip ${{ env.ARTIFACT_NAME }} ./*.dsc ./*.build* ./*.changes ./*.*deb
      - name: Release artifact
        if: ${{ inputs.do_release }}
        env:
          ARTIFACT_NAME: libsilkit4_${{ steps.build.outputs.silkit_version }}-${{ steps.build.outputs.silkit_debian_revision }}_${{ inputs.debian_arch }}
        uses: softprops/action-gh-release@v2
        with:
          prerelease: false
          draft: false
          tag_name: v${{ steps.build.outputs.silkit_version }}
          name: v${{ steps.build.outputs.silkit_version }}
          files: |
            ./${{ env.ARTIFACT_NAME }}.zip

